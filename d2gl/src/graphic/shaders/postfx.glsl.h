#pragma once

"#define P(x,y)texture(x,y).rgb\n"
"float u(vec3 u)"
"{"
  "return u.y*(.587/.299)+u.x;"
"}"
"vec3 u(vec3 u,vec3 y,float v)"
"{"
  "return vec3(-v)*y+(u*vec3(v)+y);"
"}"
"vec3 u(sampler2D u,vec2 v,ivec2 y,vec2 i)"
"{"
  "float x=v.x+float(y.x)*i.x,n=v.y+float(y.y)*i.y;"
  "return P(u,vec2(x,n));"
"}"
"vec3 v(sampler2D v,vec2 i,vec2 y,uint s)"
"{"
  "float n=.125,x=.0625,m=.25,l=.75,d=.25;"
  "int k=16;"
  "if(s==2u)"
    "n=.125,x=1./24.,m=.25,l=.75,d=.25,k=24;"
  "else "
     "if(s==3u)"
      "n=.125,x=1./24.,m=.25,l=.75,d=.25,k=32;"
  "vec3 a=u(v,i.xy,ivec2(0,-1),y),r=u(v,i.xy,ivec2(-1,0),y),e=u(v,i.xy,ivec2(0,0),y),f=u(v,i.xy,ivec2(1,0),y),g=u(v,i.xy,ivec2(0,1),y);"
  "float b=u(a),C=u(r),c=u(e),p=u(f),F=u(g),h=min(c,min(min(b,C),min(F,p))),T=max(c,max(max(b,C),max(F,p))),t=T-h;"
  "if(t<max(x,T*n))"
    "return e;"
  "vec3 o=a+r+e+f+g;"
  "float V=(b+C+p+F)*.25,A=abs(V-c),w=max(0.,A/t-d)*(1./(1.-d));"
  "w=min(l,w);"
  "vec3 B=u(v,i.xy,ivec2(-1,-1),y),D=u(v,i.xy,ivec2(1,-1),y),E=u(v,i.xy,ivec2(-1,1),y),G=u(v,i.xy,ivec2(1,1),y);"
  "o+=B+D+E+G;"
  "o*=vec3(1./9.);"
  "float H=u(B),I=u(D),J=u(E),K=u(G),L=abs(.25*H+-.5*b+.25*I)+abs(.5*C+-1.*c+.5*p)+abs(.25*J+-.5*F+.25*K),M=abs(.25*H+-.5*C+.25*J)+abs(.5*b+-1.*c+.5*F)+abs(.25*I+-.5*p+.25*K);"
  "bool N=M>=L;"
  "float O=N?"
    "-y.y:"
    "-y.x;"
  "if(!N)"
    "b=C,F=p;"
  "float Q=abs(b-c),R=abs(F-c);"
  "b=(b+c)*.5;"
  "F=(F+c)*.5;"
  "if(Q<R)"
    "b=F,b=F,Q=R,O*=-1.;"
  "vec2 S;"
  "S.x=i.x+(N?"
    "0.:"
    "O*.5);"
  "S.y=i.y+(N?"
    "O*.5:"
    "0.);"
  "Q*=m;"
  "vec2 U=S,W=N?"
    "vec2(y.x,0):"
    "vec2(0,y.y);"
  "float X=b,Y=b;"
  "bool Z=false,j=false;"
  "S+=W*vec2(-1);"
  "U+=W*vec2(1);"
  "for(int q=0;q<k;q++)"
    "{"
      "if(!Z)"
        "X=u(P(v,S.xy));"
      "if(!j)"
        "Y=u(P(v,U.xy));"
      "Z=Z||abs(X-b)>=Q;"
      "j=j||abs(Y-b)>=Q;"
      "if(Z&&j)"
        "break;"
      "if(!Z)"
        "S-=W;"
      "if(!j)"
        "U+=W;"
    "}"
  "float q=N?"
    "i.x-S.x:"
    "i.y-S.y,z=N?"
    "U.x-i.x:"
    "U.y-i.y;"
  "bool at=q<z;"
  "X=at?"
    "X:"
    "Y;"
  "if(c-b<0.==X-b<0.)"
    "O=0.;"
  "float ay=z+q;"
  "q=at?"
    "q:"
    "z;"
  "float ag=(.5+q*(-1./ay))*O;"
  "vec3 ab=P(v,vec2(i.x+(N?"
    "0.:"
    "ag),i.y+(N?"
    "ag:"
    "0.)));"
  "return u(o,ab,w);"
"}"
"\n#ifdef VERTEX\n"
"layout(location=0) in vec2 Position;"
"layout(location=1) in vec2 TexCoord;"
"layout(location=5) in uvec4 Flags;"
"uniform mat4 u_MVP;"
"out vec2 v_TexCoord;"
"flat out uvec4 v_Flags;"
"void main()"
"{"
  "gl_Position=u_MVP*vec4(Position,0,1);"
  "v_TexCoord=TexCoord;"
  "v_Flags=Flags;"
"}"
"\n#elif FRAGMENT\n"
"layout(location=0) out vec4 FragColor;layout(std140) uniform ubo_Metrics{float u_SharpStrength;float u_SharpClamp;float u_Radius;float pad1;vec2 u_RelSize;};"
"uniform sampler2D u_Texture0,u_Texture1;"
"in vec2 v_TexCoord;"
"flat in uvec4 v_Flags;"
"\n#define CoefLuma vec3(0.2126,0.7152,0.0722)\n"
"vec3 u(sampler2D v,vec2 y)"
"{"
  "vec3 u=P(v,y),i=P(v,y+u_RelSize*u_Radius),n=P(v,y-u_RelSize*u_Radius),l=CoefLuma*u_SharpStrength*1.5;"
  "vec4 m=vec4(l*(.5/u_SharpClamp),.5);"
  "float x=u_SharpClamp*2.*clamp(dot(vec4(u-(i+n)/2.,1),m),0.,1.)-u_SharpClamp;"
  "return clamp(u+x,0.,1.);"
"}"
"void main()"
"{"
  "switch(v_Flags.x){"
    "case 0u:"
      "FragColor=vec4(u(u_Texture0,v_TexCoord),1);"
      "break;"
    "case 1u:"
      "FragColor=vec4(u(u_Texture1,v_TexCoord),1);"
      "break;"
    "case 2u:"
      "FragColor=vec4(v(u_Texture0,v_TexCoord,u_RelSize,v_Flags.y),1);"
      "break;"
    "case 3u:"
      "FragColor=vec4(P(u_Texture0,v_TexCoord),1);"
      "break;"
  "}"
"}"
"\n#elif COMPUTE\n"
"layout(local_size_x=16,local_size_y=16)in;"
"uniform sampler2D u_InTexture;"
"writeonly uniform image2D u_OutTexture;"
"uniform uint u_Flag=0;"
"void main()"
"{"
  "ivec2 y=ivec2(gl_GlobalInvocationID.xy);"
  "vec2 u=vec2(textureSize(u_InTexture,0)),i=(vec2(y)+vec2(.5))/u;"
  "vec3 x=v(u_InTexture,i,vec2(1)/u,u_Flag);"
  "imageStore(u_OutTexture,y,vec4(x,1));"
"}"
"\n#endif"